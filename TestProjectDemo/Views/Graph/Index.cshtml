@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}     <script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
@*<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>*@
<script>
    $(document).ready(function () {
        $(function () {
            $('#container').highcharts({

                chart: {
                    type: 'column'
                },

                title: {
                    text: 'Data Matrix for CAB'
                },

                xAxis: {
                    categories: ['New', 'Enhancement', 'BugFixes']
                },

                yAxis: {
                    allowDecimals: false,
                    min: 0,
                    title: {
                        text: 'Number of request'
                    }
                },

                tooltip: {
                    formatter: function () {

                        return '<b>' + this.x + '</b><br/>' +
                            this.series.name + ': ' + this.y + '<br/>' +
                            'Total: ' + this.point.stackTotal;
                    }
                },

                plotOptions: {
                    column: {
                        stacking: 'normal'
                    }
                },

                series: [{
                    name: 'Low',
                    data: [30, 1, 2],
                    stack: 'Low'
                }, {
                    name: 'Medium',
                    data: [0, 0, 2],
                    stack: 'Medium'
                }, {
                    name: 'High',
                    data: [3, 1, 0],
                    stack: 'High'
                },
                {
                    name: 'Critical',
                    data: [0, 50, 0],
                    stack: 'Critical'
                }
                , {
                    name: 'Closed',
                    data: [0, 18, 0],
                    stack: 'closed'
                }]
            });
        });
    });
</script>

<script>
    function GetMinutes(timeStr) {
        var str = timeStr.split('.');
        var hours = parseInt(str[0]);
        var mins = parseInt(str[1]);

        var min = mins;
        var hr = Math.floor(min / 60);
        var hrTemp = Math.floor(hours);
        var remMin = min % 60;
        hours = hr + hrTemp;
        mins = remMin;
        return totalMins = hours + ':' + mins;
    };

    //For Dynamic Hours Calculation
    $(".days").keyup(function () {
        var total = 0;
        $(this).parent().parent().find(".days").each(function (item, v) {
            if (!!$(v).val())
                total += parseFloat($(v).val());

        });
        $(this).parent().parent().find('#TotalHrs').val(total.toFixed(2));
    });

</script>
<script>
    $(document).ready(function () {
        $(".bt").click(function () {
           
        });
    });
</script>

<a href="@Url.Action("Download", "Graph")">Test</a>
<div id="container" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
@Html.Raw(ViewBag.str);
<input type="text"  class="days" 
   
<a href="#"  class="bt btn-default">Add Button</a>